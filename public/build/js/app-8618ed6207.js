var myApp=angular.module("myApp",["ngRoute","oi.select","720kb.datepicker","chart.js","angular.snackbar","angular-loading-bar","textAngular"]);myApp.filter("unsafe",function(e){return e.trustAsHtml}),myApp.controller("globalController",["$scope","$location",function(e,t){angular.extend(e,{reportTabUrl:"/templates/manager/reportTabs.html",singleProjectTab:"/templates/projects/singleProjectTab.html",checkActiveLink:function(e){return t.path()==e?"active":void 0},timeAgo:function(e){return moment(e).fromNow()}})}]),myApp.config(["$routeProvider","$locationProvider",function(e,t){e.when("/",{templateUrl:"/templates/manager/managerReports.html",controller:"dashboardController"}),e.when("/report",{templateUrl:"/templates/manager/reports.html",controller:"reportController"}),e.when("/projects",{templateUrl:"/templates/projects/projects-listing.html",controller:"projectController",resolve:{action:function(e){return{projects:e.getProjectList()}}}}),e.when("/projects/add",{templateUrl:"/templates/projects/add-project.html",controller:"projectController",resolve:{action:function(e){return{clients:e.getClientList()}}}}),e.when("/projects/:id",{templateUrl:"/templates/projects/projects-details.html",controller:"projectController",resolve:{action:function(){return"single"}}}),e.when("/projects/:pid/comments",{templateUrl:"/templates/projects/project-comments.html",controller:"projectController",resolve:{action:function(e,t){return{comments:e.getProjectComments(t.current.params.pid)}}}}),e.when("/projects/:id/estimate/add",{templateUrl:"/templates/projects/project-estimate-add.html",controller:"projectController",resolve:{action:function(){return"single"}}}),e.when("/projects/estimate/:estimateId",{templateUrl:"/templates/projects/estimate-edit.html",controller:"projectController",resolve:{action:function(){return"single"}}}),e.when("/manage/back-date-entry",{templateUrl:"/templates/admin/backdateentry.html",controller:"adminController",resolve:{action:function(e,t){return{users:e.getUserList(),allEntries:t.getBackDateEntries()}}}}),e.when("/manage/view-back-date-entry/:backdateentryId",{templateUrl:"/templates/admin/view-backdateentry.html",controller:"adminController",resolve:{action:function(e,t){return{users:e.getUserList(),allEntries:t.getBackDateEntries()}}}}),e.otherwise("/")}]),myApp.controller("adminController",["$scope","action","timeEntry","snackbar",function(e,t,r,o){t&&void 0!=t.users&&t.users.success(function(t){console.log("all users",t),e.users=t}),t&&void 0!=t.allEntries&&(window.document.title="Backdate entry",t.allEntries.success(function(t){0!=t.length&&(console.log("all Entries",t.length),e.allEntries=t,e.showEntries=!0)})),angular.extend(e,{backdateEntry:{},allEntries:{},showEntries:!1}),angular.extend(e,{backdateEntrySubmit:function(t){if(t.$valid){var n=[];angular.forEach(e.backdateEntry.users,function(e,t){n.push(e.id)});var a={date:e.backdateEntry.backdate,users:n,comment:e.backdateEntry.reason};r.saveBackDateEntry(a).success(function(t){console.log("backdate entries",t),e.allEntries=t,e.backdateEntry={},e.showEntries=!0,o.create("Entry added and mail sent.",1e3)})}}})}]),myApp.factory("clientFactory",["$http",function(e){var t={};return t.getClientList=function(){return e.get(baseUrl+"api/get-client-list")},t}]),myApp.factory("commentFactory",["$http",function(e){var t={};return t.getProjectComments=function(t){return console.log("Project id",t),e.get(baseUrl+"api/get-project-comments/"+t)},t.saveComment=function(t){return e({headers:{"Content-Type":"application/json"},url:baseUrl+"api/save-project-comment",method:"POST",data:t})},t}]),myApp.factory("estimateFactory",["$http",function(e){var t={};return t.getEstimateById=function(t){return e.get(baseUrl+"api/get-estimate-by-id/"+t)},t.updateEstimate=function(t){return e({headers:{"Content-Type":"application/json"},url:baseUrl+"api/update-estimate-by-id",method:"POST",data:t})},t}]),myApp.controller("projectController",["$scope","projectFactory","$routeParams","snackbar","$location","action","clientFactory","estimateFactory","timeEntry","commentFactory",function(e,t,r,o,n,a,s,i,c,l){a&&void 0!=a.projects&&a.projects.success(function(t){console.log("all projects",t),e.projects=t}),a&&void 0!=a.clients&&a.clients.success(function(t){console.log("all clients",t),e.clients=t}),a&&void 0!=a.comments&&(e.singleProjectId=r.pid,a.comments.success(function(t){console.log("all comments",t),e.singleProject=t,e.comments=t})),r.id&&(e.singleProjectId=r.id,t.getProjectById(r.id).success(function(t){console.log("Single project",t),e.singleProject=t,e.showSingleProject=!0})),r.estimateId&&i.getEstimateById(r.estimateId).success(function(r){console.log("Need to load estimate",r),e.singleEstimate=r,t.getProjectById(r.project_id).success(function(t){console.log("Single project",t),e.singleProject=t,e.showSingleEstimate=!0,c.getEntriesForEstimate(e.singleEstimate.id).success(function(t){e.estimateTimes=t,console.log("Time entries",t)})})}),angular.extend(e,{singleProject:{},showSingleProject:!1,showSingleEstimate:!1,newEstimateFormSubmit:!1,projectEstimte:{},singleEstimate:{},newProject:{}}),angular.extend(e,{saveComment:function(t){if(t.$valid){console.log(e.newComment,r.pid);var n={comment:e.newComment,project_id:r.pid};l.saveComment(n).success(function(t){console.log(t),e.singleProject=t,e.comments=t,e.newComment=""})}else e.newEstimateFormSubmit=!0,o.create("Your form has errors!!",1e3)},deleteProject:function(){var e=confirm("This will delete the project and it's time. Ok?");e===!0&&t.deleteProject(r.id).success(function(e){n.path("/projects"),o.create("Project deleted",1e3)})},editEstiate:function(t){if(t.$valid){var r={id:e.singleEstimate.id,desc:e.singleEstimate.desc,hours_allocated:e.singleEstimate.hours_allocated,status:e.singleEstimate.status};i.updateEstimate(r).success(function(t){console.log("estimate edited",t),n.path("/projects/"+e.singleProject.id),o.create("Estimate saved",1e3)})}else e.newEstimateFormSubmit=!0,o.create("Your form has errors!!",1e3)},addNewProject:function(r){if(r.$valid){console.log(e.newProject);var a={name:e.newProject.name,client:e.newProject.client_id[0].id};t.saveNewProject(a).success(function(e){console.log("save new project",e),n.path("/projects"),o.create("Project added",1e3)})}else e.newEstimateFormSubmit=!0,o.create("Your form has errors!!",1e3)},saveProjectEstimate:function(a){if(a.$valid){console.log("$scope.projectEstimte",e.projectEstimte);var s={project_id:r.id,desc:e.projectEstimte.desc,hours_allocated:e.projectEstimte.hours_allocated};t.saveProjectEstimate(s).success(function(e){console.log(e),n.path("/projects/"+r.id),o.create("Estimate added",1e3)})}else e.newEstimateFormSubmit=!0,o.create("Your form has errors!!",1e3)}})}]),myApp.factory("projectFactory",["$http",function(e){var t={};return t.getProjectList=function(){return e.get(baseUrl+"api/get-project-list")},t.getProjectById=function(t){return e.get(baseUrl+"api/get-project-by-id/"+t)},t.saveProjectEstimate=function(t){return e({headers:{"Content-Type":"application/json"},url:baseUrl+"api/save-project-estimate",method:"POST",data:t})},t.saveNewProject=function(t){return e({headers:{"Content-Type":"application/json"},url:baseUrl+"api/save-new-project",method:"POST",data:t})},t.deleteProject=function(t){return e({headers:{"Content-Type":"application/json"},url:baseUrl+"api/delete-project",method:"POST",data:{id:t}})},t}]),myApp.controller("dashboardController",["$scope","timeEntry","$parse",function(e,t,r){t.getTimeSheetEntryByDate().success(function(t){e.timeEntryOverview=t}),angular.extend(e,{graphLabels:{}}),angular.extend(e,{changeTag:function(t){e.tabUrl=t}}),e.labels=["Download Sales","In-Store Sales","Mail-Order Sales"],e.data=[300,500,100]}]),myApp.controller("reportController",["$scope","timeEntry","$timeout","projectFactory","userFactory",function(e,t,r,o,n){t.getEntries().then(function(t){return console.log("time entries",t.data),e.timeEntries=t.data,angular.forEach(t.data,function(t,r){e.totalTime=e.totalTime+t.time}),t}).then(function(){n.getUserList().then(function(t){console.log("user list",t.data),angular.forEach(t.data,function(t,r){e.users.push(t)})})}).then(function(){o.getProjectList().then(function(t){console.log("project list",t.data),angular.forEach(t.data,function(t,r){e.projects.push(t)}),r(function(){e.showData=!0},500)})}),angular.extend(e,{totalTime:0,showData:!1,filters:{},users:[],projects:[],dt:new Date}),angular.extend(e,{filterTime:function(r){console.log(e.filters);var o={};if(""!=e.filters.desc&&(o.desc=e.filters.desc),void 0!==e.filters.users&&e.filters.users.length>0&&(o.users=[],angular.forEach(e.filters.users,function(e,t){o.users.push(e.id)})),void 0!==e.filters.project&&e.filters.project.length>0&&(o.projects=[],angular.forEach(e.filters.project,function(e,t){o.projects.push(e.id)})),void 0!==e.filters.startDate&&(o.startDate=e.filters.startDate),void 0!==e.filters.endDate){o.endDate=e.filters.endDate;var n=moment(o.startDate).dayOfYear(),a=moment(o.endDate).dayOfYear();if(console.log(n,a),void 0!==e.filters.startDate&&n>a)return alert("End date is before start date."),!1}t.getSearchResult(o).then(function(t){console.log("search result",t.data),e.timeEntries=t.data,e.totalTime=0,angular.forEach(t.data,function(t,r){e.totalTime=e.totalTime+t.time})})},clearFilters:function(){e.filters={}}})}]),myApp.factory("timeEntry",["$http",function(e){var t={};return t.getEntries=function(){return e.get(baseUrl+"api/time-report")},t.getSearchResult=function(t){return e({headers:{"Content-Type":"application/json"},url:baseUrl+"api/time-report-filter",method:"POST",data:t})},t.getTimeSheetEntryByDate=function(){return e.get(baseUrl+"api/get-timeentry-by-date")},t.getEntriesForEstimate=function(t){return e.get(baseUrl+"api/get-timeentry-for-estimate/"+t)},t.getBackDateEntries=function(){return e.get(baseUrl+"api/get-backdate-entries")},t.saveBackDateEntry=function(t){return e({headers:{"Content-Type":"application/json"},url:baseUrl+"api/allow-backdate-entry",method:"POST",data:t})},t}]),myApp.factory("userFactory",["$http",function(e){var t={};return t.getUserList=function(){return e.get(baseUrl+"api/get-user-list")},t}]);